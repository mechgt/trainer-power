//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrainerPower.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TrainerPower.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Power Track.
        /// </summary>
        public static string Label_CreatePowerTrack {
            get {
                return ResourceManager.GetString("Label_CreatePowerTrack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Live Recording and HRV.
        /// </summary>
        public static string Label_LiveRecording {
            get {
                return ResourceManager.GetString("Label_LiveRecording", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make.
        /// </summary>
        public static string Label_Manufacturer {
            get {
                return ResourceManager.GetString("Label_Manufacturer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model.
        /// </summary>
        public static string Label_Model {
            get {
                return ResourceManager.GetString("Label_Model", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple.
        /// </summary>
        public static string Label_Multiple {
            get {
                return ResourceManager.GetString("Label_Multiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Power Curve.
        /// </summary>
        public static string Label_PowerCurve {
            get {
                return ResourceManager.GetString("Label_PowerCurve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trainer Power.
        /// </summary>
        public static string Label_TrainerPower {
            get {
                return ResourceManager.GetString("Label_TrainerPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trainers.
        /// </summary>
        public static string Label_Trainers {
            get {
                return ResourceManager.GetString("Label_Trainers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Trainers cannot be removed..
        /// </summary>
        public static string Text_CannotRemoveDefaultTrainers {
            get {
                return ResourceManager.GetString("Text_CannotRemoveDefaultTrainers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Evaluation version limited to creating power track for first {0} minutes of activity.  Upgrade to remove this message and create power track for full activity.  Activation can be done from the settings page.
        ///www.mechgt.com.
        /// </summary>
        public static string Text_EvalMessage {
            get {
                return ResourceManager.GetString("Text_EvalMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trainer Power plugin can provide power info to other plugins such as {0} for live display while using a trainer..
        /// </summary>
        public static string Text_Info {
            get {
                return ResourceManager.GetString("Text_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Power track created for {0} by {1} plugin v{2}.
        /// </summary>
        public static string Text_NotesMessage {
            get {
                return ResourceManager.GetString("Text_NotesMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Power Track already contains data.  Overwrite?.
        /// </summary>
        public static string Text_OverwritePowerTrack {
            get {
                return ResourceManager.GetString("Text_OverwritePowerTrack", resourceCulture);
            }
        }
    }
}
